[build-system]
requires = ["setuptools>=77.0"]
build-backend = "setuptools.build_meta"

[project]
name = "drepo"
version = "0.2.0"
description = "Python utilities for supporting repositories"
readme = "README.md"
dependencies = ["slog"]
requires-python = ">=3.10,<4.0"
authors = [
  {name = "David C. Stauffer", email = "dstauffman@yahoo.com"},
]
maintainers = [
  {name = "David C. Stauffer", email = "dstauffman@yahoo.com"},
]
license = { file = "LICENSE" }
keywords = ["repository", "standards"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Langauge :: Python :: 3.10",
    "Programming Langauge :: Python :: 3.11",
    "Programming Langauge :: Python :: 3.12",
    "Programming Langauge :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[project.optional-dependencies]
test = ["pytest>=7.4", "pytest-cov>=4.0"]

[project.urls]
Repository = "https://github.com/DStauffman/drepo"
Issues = "https://github.com/DStauffman/drepo/issues"
Changelog = "https://github.com/DStauffman/drepo/blob/main/CHANGELOG.md"

[project.scripts]
drepo = "drepo.__main__:main"

[tool.setuptools.package-data]
dstauffman = ["pyproject.toml", "README.md"]

[tool.bandit]
skips = ["B101"]

[tool.black]
line-length = 128
target_version = ["py313"]

[tool.coverage.run]
branch = true
omit = ["*/site-packages/*", "*/.eggs/*"]
disable_warnings = ["couldnt-parse"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Create platform independent pragmas (potentially have the test runner modify this)
    "pragma: noc unix",
    #"pragma: noc windows",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    "def _main",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if False:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",

    # Don't complain about typing overloads
    "@overload"
]
ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"

[tool.coverage.xml]
output = "coverage_html_report/coverage.xml"

[tool.isort]
py_version = 313
profile = "black"
line_length = 128
combine_as_imports = true
force_sort_within_sections = true
case_sensitive = true
force_alphabetical_sort_within_sections = true
skip_glob = ["__init__.py", "*/__init__.py"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "SLOG", "FIRSTPARTY", "LOCALFOLDER"]
known_slog = ["slog"]

[tool.mypy]
show_error_codes       = true
warn_return_any        = true
warn_unused_configs    = true
warn_unreachable       = true
warn_unused_ignores    = true
disallow_untyped_calls = true
disallow_untyped_defs  = true
no_implicit_optional   = true
files                  = [
    "$MYPY_CONFIG_FILE_DIR/drepo/**/*.py"]
mypy_path              = [
    "$MYPY_CONFIG_FILE_DIR/../slog"]
untyped_calls_exclude  = ["matplotlib"]
#linecount_report       = ".mypy_report"
#any_exprs_report       = ".mypy_report"
#html_report            = ".mypy_report"
#cobertura_xml_report   = ".mypy_report"
#linecoverage_report    = ".mypy_report"
#lineprecision_report   = ".mypy_report"
#xml_report             = ".mypy_report"

[tool.pylint.messages_control]
max-line-length = 128
disable = ["C0103", "C0301", "C0411", "C0414", "E0401", "E0601", "E0606", "E0611", "E1101", "R0401", "R0402", "R0801", "R0902", "R0903", "R0912", "R0913", "R0914", "R0915", "W0511", "W0702"]
enable = ["I0021"]
ignore-paths = "^(.*[/\\\\]|)tests[/\\\\]test_.*$"

[tool.pydocstyle]
inherit = false
convention = "numpy"
add-ignore = ["D102", "D105", "D204"]

[tool.pyright]
include = ["drepo/**/*.py"]
extraPaths = ["../slog"]
exclude = []
venvPath = "C:\\Users\\DStauffman\\Documents\\venvs"
venv = "everything"
pythonVersion = "3.13"
pythonPlatform = "Windows"  # "All"?
typeCheckingMode = "basic"  # "strict"?
deprecateTypingAliases = true
reportGeneralTypeIssues = false
reportUnboundVariable = false
reportOptionalMemberAccess = true
enableTypeIgnoreComments = true
reportUnnecessaryTypeIgnoreComment = false
